#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>

typedef uint8_t BYTE;

#define BLOCKSIZE 512

static inline int is_jpeg_file_header(const BYTE *block)
{
    if (block[0] == 0xff && block[1] == 0xd8 && block[2] == 0xff &&
            (block[3] == 0xe0 || block[3] == 0xe1))
        return 1;
    return 0;
}

int main(void)
{
    BYTE block[BLOCKSIZE];
    const char file[] = "card.raw";

    FILE* fp = fopen(file, "r");
    if (fp == NULL)
    {
        fprintf(stderr, "Error opening file %s for reading\n", file);
        return 1;
    }

    int num = 0;

    while (fread(&block, sizeof(block), 1, fp) == 1)
    {
        if (is_jpeg_file_header(block))
        {
            char filename[20];
            snprintf(filename, sizeof(filename), "%03d_output.jpg", num);
            FILE* outfile = fopen(filename, "a");
            if (outfile == 0)
            {
                fprintf(stderr, "Error opening file %s for writing\n", filename);
                return 1;
            }
            printf("%s\n", filename);

            fwrite(&block, sizeof(block), 1, outfile);
            while (fread(&block, sizeof(block), 1 , fp) == 1 &&
                    !is_jpeg_file_header(block))
            {
                fwrite(&block, sizeof(block), 1, outfile);
            }
            fclose(outfile);
            num++;
            fseek(fp, -BLOCKSIZE, SEEK_CUR);
        }
    }

    fclose(fp);

    return 0;
}
